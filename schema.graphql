# source: http://localhost:4000
# timestamp: Tue Mar 24 2020 13:19:55 GMT-0700 (Pacific Daylight Time)

directive @cacheControl(maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | OBJECT | INTERFACE

type Article {
  id: ID!
  title: String!
  summary: String
  content: String
  headerImageURL: String
  author: User!
  categories: [Category]
  comments: [Comment]
  likes: Int!
  wordLength: Int!
  draft: Boolean!
  createdAt: String!
  updatedAt: String!
  publishedAt: String
  userId: String!
  subscribersOnly: Boolean!
  slug: String
}

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

type Category {
  id: ID!
  name: String!
  createdAt: String!
  updatedAt: String!
}

type Comment {
  id: ID
  user: User!
  message: String!
  replies: [Comment]
  createdAt: String!
  updatedAt: String!
}

input CreateOrUpdateArticleInput {
  id: ID
  title: String
  summary: String
  content: String
  headerImageURL: String
  createdAt: String
  updatedAt: String
  userId: String
  subscribersOnly: Boolean
  draft: Boolean
}

type CreateOrUpdateArticlePayload {
  id: ID!
}

input CreateUserInput {
  id: ID!
  email: String!
  firstName: String!
  lastName: String
}

type CreateUserPayload {
  id: ID!
  username: String!
}

type Mutation {
  createOrUpdateArticle(input: CreateOrUpdateArticleInput!): CreateOrUpdateArticlePayload!
  publishArticle(input: PublishArticleInput!): PublishArticlePayload!
  createUser(input: CreateUserInput!): CreateUserPayload!
}

input PublishArticleInput {
  id: ID!
}

type PublishArticlePayload {
  id: ID!
  slug: String!
}

type Query {
  articles: [Article]
  article(id: ID!): Article
  articleBySlug(slug: String!): Article
  articlesByUser(userId: ID!, drafts: Boolean): [Article]
  me(userId: ID!): User!
  user(username: String!): User
  unsplashPhoto(search: String): [UnsplashPhoto]
}

type UnsplashPhoto {
  id: ID!
  urls: UnsplashPhotoURLs!
  photographerName: String!
}

type UnsplashPhotoURLs {
  raw: String!
  full: String!
  regular: String!
  small: String!
  thumb: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  id: ID!
  firstName: String!
  lastName: String
  username: String!
  email: String!
  profileImageURL: String
  following: [User]
  followers: [User]
  createdAt: String!
  updatedAt: String!
}
